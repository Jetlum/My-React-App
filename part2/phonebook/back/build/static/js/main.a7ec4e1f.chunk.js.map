{"version":3,"sources":["components/Contacts.js","components/Filter.js","components/ContactsForm.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Contacts","persons","removeContact","map","person","className","name","number","onClick","id","Filter","value","onChange","ContactsForm","onNameChange","nameValue","onNumberChange","numberValue","onSubmit","type","Notification","message","baseURL","contactsServiceFunctions","getAll","axios","get","then","response","data","create","post","update","put","deleteFunction","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","errorMessage","setErrorMessage","useEffect","contactsService","initialContacts","filteredPersons","toLowerCase","includes","event","target","preventDefault","date","Date","toISOString","important","Math","random","length","some","p","contactExists","window","confirm","personCreated","find","changedContact","returnedContacts","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7ec4e1f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contacts = ({ persons, removeContact }) => {\r\n\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{persons.map(person => \r\n\t\t\t \t<li key={person.id} className='contacts'>\r\n\t\t\t \t\t{person.name} {person.number}\r\n\t\t\t \t\t<button onClick={removeContact(person.id, person.name)}>Delete</button>\r\n\t\t\t \t</li>\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tFilter <input value={value} onChange={onChange} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst ContactsForm = ({ onNameChange, nameValue, onNumberChange, numberValue, onSubmit }) => {\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<div>\r\n\t\t    \tWrite your name: <input value={nameValue} onChange={onNameChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t    \tWrite your number: <input value={numberValue} onChange={onNumberChange} />\r\n\t\t\t</div>\r\n\t\t \t<div>\r\n\t\t    \t<button type=\"submit\">Add Contact</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default ContactsForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseURL = 'https://stark-tor-98775.herokuapp.com/api/contacts'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseURL)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = person => {\r\n\tconst request = axios.post(baseURL, person)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n\tconst request = axios.put(`${baseURL}/${id}`, person)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst deleteFunction = (id) => {\r\n\tconst request = axios.delete(`${baseURL}/${id}`)\r\n\treturn request.then(response => response)\r\n}\r\n\r\nconst contactsServiceFunctions = { getAll, create, update, deleteFunction }\r\n\r\nexport default contactsServiceFunctions","import React, { useState, useEffect } from 'react'\r\nimport Contacts from './components/Contacts'\r\nimport Filter from './components/Filter'\r\nimport ContactsForm from './components/ContactsForm'\r\nimport Notification from './components/Notification'\r\nimport contactsService from './services/contacts'\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([]) \r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber]\t= useState('')\r\n\tconst [filter, setFilter] =\tuseState('')\r\n\tconst [errorMessage, setErrorMessage] = useState()\r\n\r\n\tuseEffect(() => {\r\n    \tcontactsService\r\n      \t\t.getAll()\r\n      \t\t.then(initialContacts => {\r\n        \t\tsetPersons(initialContacts)\r\n      \t\t})\r\n  \t}, [])\r\n\r\n\t  const addContact = (event) => {\r\n\t  \tevent.preventDefault()\r\n\t  \tconst person = {\r\n\t  \t\tname: newName,\r\n\t  \t\tnumber: newNumber,\r\n\t  \t\tdate: new Date().toISOString(),\r\n\t  \t\timportant: Math.random() < 0.5,\r\n\t  \t\tid: newName + '-' + (persons.length + 1)\r\n\t\t}\r\n\t\tconst contactExists = person => persons.some(p => p.name === person.name)\r\n\r\n\t\tif (contactExists(person)) {\r\n\t\t\tif (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)){\r\n\t\t\t\tconst personCreated = persons.find(p => p.name === person.name)\r\n\t\t\t\tconst changedContact = { ...personCreated, id: personCreated.id, number: person.number }\r\n\t\t\t\tcontactsService\r\n\t\t\t\t\t.update(personCreated.id, changedContact)\r\n\t\t\t      \t.then(returnedContacts => {\r\n\t\t\t        \tsetPersons(persons.map(p => p.id !== personCreated.id ? p  : returnedContacts))\r\n    \t\t\t\t\tsetErrorMessage(\r\n\t\t\t\t          `Number of the contact: '${person.name}' was updated to '${person.number}'`\r\n\t\t\t\t        )\r\n\t\t\t\t        setTimeout(() => {\r\n\t\t\t\t          setErrorMessage(null)\r\n\t\t\t\t        }, 5000)\r\n\r\n\t\t\t      \t})\r\n\t\t\t      \t.catch(error => {\r\n\t\t\t\t        setErrorMessage(\r\n\t\t\t\t          `Contact '${person.name} ${person.number}' was already removed from server`\r\n\t\t\t\t        )\r\n\t\t\t\t        setTimeout(() => {\r\n\t\t\t\t          setErrorMessage(null)\r\n\t\t\t\t        }, 5000)\r\n\t\t\t        \tsetPersons(persons.filter(p => p.id !== person.id))\r\n\t\t\t      \t})\r\n\t\t\t      \tsetNewName('')\r\n\t\t\t\t\tsetNewNumber('')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcontactsService\r\n\t\t\t.create(person)\r\n\t\t\t.then(returnedContacts => {\r\n\t\t\t\tsetPersons(persons.concat(returnedContacts))\r\n\t\t\t\tsetNewName('')\r\n\t\t\t\tsetNewNumber('')\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Added '${person.name} ${person.number}'`\r\n\t\t\t\t)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t}, 5000)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst removeContact = (id, name) => () => {\r\n\t\tif (window.confirm(`Delete ${name}?`)) {\r\n\t\t\tcontactsService\r\n\t\t\t\t.deleteFunction(id)\r\n\t\t\t\t.then(returnedContacts => {\r\n\t\t\t\t\tsetPersons(persons.filter(p => p.id !== id))\r\n\t\t\t\t})\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Deleted '${name}'`\r\n\t\t\t\t)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t}, 5000)\r\n\t\t}\r\n\t}\r\n\t  const handleNameChange = event => setNewName(event.target.value)\r\n\t  const handleNumberChange = event => setNewNumber(event.target.value)\r\n\t  const handleFilterChange = event => setFilter(event.target.value)\r\n\r\n\t  // .includes can be replaced with .startsWith which determines whether a string begins \r\n\t  // with the characters of a specified string, more appropriate for this kind of filter\r\n\tconst filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t    <h1>Phonebook</h1>\r\n\t\t    {errorMessage && <Notification message={errorMessage} />}\r\n\t\t    <Filter value={filter} onChange={handleFilterChange} />\r\n\t\t    <h1>Add a new contact</h1>\r\n\t\t      <ContactsForm \r\n\t\t      \tonNameChange={handleNameChange} \r\n\t\t      \tnameValue={newName} \r\n\t\t      \tonNumberChange={handleNumberChange}\r\n\t\t      \tnumberValue={newNumber}\r\n\t\t      \tonSubmit={addContact}\r\n\t\t      />\r\n\t\t      <h1>Contacts</h1>\r\n\t\t      <Contacts persons={filteredPersons} removeContact={removeContact} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}